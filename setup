#!/usr/bin/env bash

# exit immediately if a pipeline exits with a non-zero status
set -Eeuxo pipefail

ARCH=$(uname -m)
SCRIPT_DIR="$(cd "$(dirname "$0")" &> /dev/null && pwd)"

# TODO: use "associative array" when Bash 4 comes to macOS
LINKING_MAP=(
  "$SCRIPT_DIR/.gitconfig:$HOME/.config/git/config"
  "$SCRIPT_DIR/.gitmessage:$HOME/.gitmessage"
  "$SCRIPT_DIR/.npmrc:$HOME/.npmrc"
  "$SCRIPT_DIR/.config/fish/config.fish:$HOME/.config/fish/config.fish"
  "$SCRIPT_DIR/.config/fish/functions:$HOME/.config/fish"
  "$SCRIPT_DIR/.config/fish/completions:$HOME/.config/fish"
  "$SCRIPT_DIR/.config/starship.toml:$HOME/.config/starship.toml"
  "$SCRIPT_DIR/.vscode/settings.json:$HOME/Library/Application Support/Code/User/settings.json"
  "$SCRIPT_DIR/.vscode/global.code-snippets:$HOME/Library/Application Support/Code/User/snippets/global.code-snippets"
)

# print macOS version information
sw_vers

if [[ "${CI:-false}" != "true" ]]; then
  # accept XCode license
  sudo xcodebuild -license accept

  # install Apple's Command Line Tools
  # ignore "already installed" error if it appears
  xcode-select --install || true

  # Install all available software updates (OS, Safari, security etc.)
  softwareupdate --install --all --agree-to-license --verbose
fi

if [[ $ARCH == "arm64" ]]; then
  # Install Rosetta 2 (only for Apple Silicon)
  softwareupdate --install-rosetta --agree-to-license --verbose
fi

# install Fish shell
"$SCRIPT_DIR/scripts/install-fish.sh"

# install Starship prompt
"$SCRIPT_DIR/scripts/install-starship.sh"

# install Node.js
"$SCRIPT_DIR/scripts/install-nodejs.sh"

# install fonts
"$SCRIPT_DIR/scripts/install-fonts.sh"

# install Visual Studio Code
"$SCRIPT_DIR/scripts/install-vscode.sh"

# install Docker Desktop
"$SCRIPT_DIR/scripts/install-docker.sh"

# install AWS CLI
"$SCRIPT_DIR/scripts/install-aws-cli.sh"

# create directories if they don't exist
mkdir -p -v "$HOME/.config/git"
mkdir -p -v "$HOME/.config/fish"
mkdir -p -v "$HOME/Library/Application Support/Code/User/snippets"

# create symbolic links to file and directories in the .dotfiles
for LINK in "${LINKING_MAP[@]}"; do
  SOURCE="${LINK%%:*}"
  DESTINATION="${LINK##*:}"
  ln -f -s -v "$SOURCE" "$DESTINATION"
done

# install Visual Studio Code extensions
"$SCRIPT_DIR/scripts/install-vscode-extensions.sh"
