{
  // Editor
  "editor.fontFamily": "Fira Code, monospace",
  "editor.codeLensFontFamily": "Fira Code, monospace",
  "editor.inlayHints.fontFamily": "Fira Code, monospace",
  "editor.fontWeight": "400",
  "editor.fontLigatures": true,
  "editor.fontSize": 13,
  "editor.inlayHints.fontSize": 10,
  "editor.codeLensFontSize": 10,
  "editor.lineHeight": 0,
  "editor.tabSize": 2,
  "editor.rulers": [80],
  "editor.detectIndentation": true,
  "editor.lineNumbers": "on",
  "editor.tabCompletion": "on",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.smoothScrolling": true,
  "editor.folding": false,
  "editor.glyphMargin": true,
  "editor.defaultColorDecorators": "auto",
  "editor.colorDecorators": true,
  "editor.overviewRulerBorder": false,
  "editor.linkedEditing": true,
  "editor.renderLineHighlight": "all",
  "editor.occurrencesHighlight": "multiFile",
  "editor.accessibilitySupport": "off",
  "editor.snippetSuggestions": "inline",
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.overtypeOnPaste": false,
  "editor.overtypeCursorStyle": "underline",
  "editor.minimap.enabled": false,
  "editor.find.addExtraSpaceOnTop": false,
  "editor.find.history": "never",
  "editor.semanticHighlighting.enabled": true,
  "editor.suggest.preview": true,
  "editor.suggest.localityBonus": true,
  "editor.suggest.showStatusBar": true,
  "editor.suggest.filterGraceful": true,
  "editor.unicodeHighlight.ambiguousCharacters": true,
  "editor.unicodeHighlight.invisibleCharacters": true,
  "editor.unicodeHighlight.nonBasicASCII": true,
  "editor.unicodeHighlight.includeComments": true,
  "editor.hover.sticky": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.guides.indentation": true,
  "editor.lightbulb.enabled": "onCode",
  "editor.inlayHints.enabled": "offUnlessPressed",
  "editor.parameterHints.enabled": true,
  "editor.parameterHints.cycle": true,
  "editor.stickyScroll.enabled": true,
  "editor.stickyScroll.scrollWithEditor": true,
  "editor.stickyScroll.maxLineCount": 5,
  "editor.experimental.asyncTokenization": true,
  "editor.defaultFormatter": null,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.formatOnSaveMode": "modificationsIfAvailable",
  "editor.pasteAs.preferences": [
    "text.updateImports",
    "uri.path.relative"
  ],
  "editor.dropIntoEditor.preferences": [
    "text.updateImports",
    "uri.path.relative"
  ],
  "editor.codeActionWidget.includeNearbyQuickFixes": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "never",
    "source.fixAll.eslint": "explicit",
    "source.sortImports": "explicit",
    "source.addMissingImports": "explicit",
    "source.organizeImports": "never"
  },

  // Window
  "window.zoomLevel": 0,
  "window.zoomPerWindow": true,
  "window.nativeTabs": true,
  "window.commandCenter": false,
  "window.titleBarStyle": "custom",
  "window.title": "${activeEditorMedium}${separator}${rootName}",
  "window.newWindowDimensions": "maximized",
  "window.restoreFullscreen": true,
  "window.confirmBeforeClose": "always",
  "window.autoDetectColorScheme": true,
  "window.dialogStyle": "custom",
  "window.customTitleBarVisibility": "auto",
  "window.systemColorTheme": "auto",

  // Workbench
  "workbench.colorTheme": "Default Dark Modern",
  "workbench.iconTheme": "vscode-icons",
  "workbench.productIconTheme": "Default",
  "workbench.startupEditor": "none",
  "workbench.externalBrowser": "chrome",
  "workbench.sideBar.location": "right",
  "workbench.activityBar.location": "top",
  "workbench.panel.showLabels": false,
  "workbench.navigationControl.enabled": false,
  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.defaultBinaryEditor": "hexEditor.hexedit",
  "workbench.editor.historyBasedLanguageDetection": true,
  "workbench.editor.tabActionCloseVisibility": false,
  "workbench.editor.splitInGroupLayout": "horizontal",
  "workbench.editor.preventPinnedEditorClose": "keyboardAndMouse",
  "workbench.editor.pinnedTabsOnSeparateRow": true,
  "workbench.editor.doubleClickTabToToggleEditorGroupSizes": "maximize",
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.limit.value": 7,
  "workbench.editor.dragToOpenWindow": false,
  "workbench.editor.customLabels.enabled": true,
  "workbench.editor.customLabels.patterns": {
    "**/app/**/page.tsx": "${dirname} - Page",
    "**/app/**/layout.tsx": "${dirname} - Layout",
  },
  "workbench.tree.enableStickyScroll": true,
  "workbench.tree.stickyScrollMaxItemCount": 7,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.commandPalette.preserveInput": true,
  "workbench.list.smoothScrolling": true,
  "workbench.view.alwaysShowHeaderActions": true,
  "workbench.settings.enableNaturalLanguageSearch": false,
  "workbench.settings.editor": "json",
  "workbench.settings.useSplitJSON": true,

  // Files
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.eol": "\n",
  "files.defaultLanguage": "${activeEditorLanguage}",
  "files.readonlyFromPermissions": true,
  "files.autoSaveWhenNoErrors": true,
  "files.restoreUndoStack": true,

  // Explorer
  "explorer.confirmDelete": true,
  "explorer.confirmDragAndDrop": true,
  "explorer.autoOpenDroppedFile": false,
  "explorer.decorations.badges": true,
  "explorer.compactFolders": false,
  "explorer.incrementalNaming": "smart",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "*.js": "${capture}.js.map, $(capture).*.js, $(capture)_*.js, ${capture}.d.ts, ${capture}.d.ts.map",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs, ${capture}.d.mts, ${capture}.d.mts.map",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs, ${capture}.d.cts, ${capture}.d.cts.map",
    "*.ts": "$(capture).*.ts, $(capture)_*.ts, $(capture).d.ts, $(capture).d.ts.map",
    "*.jsx": "${capture}.js, $(capture).*.jsx, $(capture)_*.jsx",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.tsx",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.css": "$(capture).css.map, $(capture).*.css, $(capture)_*.css, $(capture)-*.css",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    "tsconfig.json": "tsconfig.*.json, tsconfig_*.json, tsconfig-*.json",
    "package.json": "package-lock.json, npm-shrinkwrap.json, .npm*, .pnp.*, .pnpm*, pnpm*, yarn*, .yarnrc*, lerna*, bun.lockb, turbo*",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, docker-compose.*, compose.*, dockerfile*",
    "go.mod": "go.sum",
    "go.work": "go.work.sum",
    "Makefile": "*.mk",
    // TODO: .config files
    // see: https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/creating-a-default-community-health-file#supported-file-types
    "README.md": "README_*, README-*, AUTHORS, CONTRIBUTORS, CODEOWNERS, MAINTAINERS, CREDITS, CONTRIBUTING.md, CODE_OF_CONDUCT.md, SECURITY.md, SUPPORT.md, BUILDING.md, CHANGELOG*, HISTORY.md, GOVERNANCE.md, onboarding.md, LICENSE, RELEASE_NOTES*, ROADMAP.md",
  },

  // Search
  "search.showLineNumbers": true,
  "search.smartCase": true,
  "search.exclude": {
    "**/.git": true,
    "**/.yarn": true,
    "**/node_modules": true,
    "**/bower_components": true,
    "**/package-lock.json": true,
    "**/yarn.lock": true,
    "**/*.code-search": true,
    "**/dist": true,
    "**/out": true
  },

  // Breadcrumbs
  "breadcrumbs.enabled": true,
  "breadcrumbs.icons": false,
  "breadcrumbs.symbolPath": "off",

  // Accessibility
  "accessibility.dimUnfocused.enabled": true,
  "accessibility.dimUnfocused.opacity": 0.75,
  "accessibility.signals.onDebugBreak": {
    "sound": "on"
  },
  "accessibility.signals.terminalCommandFailed": {
    "sound": "on"
  },
  "accessibility.signals.terminalBell": {
    "sound": "on"
  },
  "accessibility.signals.codeActionApplied": {
    "sound": "on"
  },

  // Terminal
  "terminal.explorerKind": "external",
  "terminal.integrated.defaultProfile.osx": "fish",
  "terminal.integrated.suggest.enabled": true,
  "terminal.integrated.suggest.enableExtensionCompletions": true,
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.shellIntegration.decorationsEnabled": "both",
  "terminal.integrated.fontFamily": "Fira Code, monospace",
  "terminal.integrated.fontLigatures": true,
  "terminal.integrated.fontWeight": "400",
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.cursorStyleInactive": "none",
  "terminal.integrated.enablePersistentSessions": false,
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.confirmOnExit": "hasChildProcesses",
  "terminal.integrated.smoothScrolling": true,
  "terminal.integrated.mouseWheelScrollSensitivity": 0.2,
  "terminal.integrated.scrollback": 100000,
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.customGlyphs": true,
  "terminal.integrated.hideOnStartup": "whenEmpty",
  "terminal.integrated.stickyScroll.enabled": true,
  "terminal.integrated.enableVisualBell": true,
  "terminal.integrated.autoReplies": {
    "Terminate batch job (Y/N)": "Y\r"
  },
  "terminal.integrated.allowedLinkSchemes": [
    "file",
    "http",
    "https",
    "mailto",
    "vscode",
    "vscode-insiders",
    "docker-desktop"
  ],

  // Keyboard
  "keyboard.touchbar.enabled": false,

  // Debug
  "debug.inlineValues": "on",
  "debug.toolBarLocation": "floating",
  "debug.showBreakpointsInOverviewRuler": true,
  "debug.confirmOnExit": "always",
  "debug.openExplorerOnEnd": true,
  "debug.showVariableTypes": true,
  "debug.javascript.enableNetworkView": true,

  // Zen Mode
  "zenMode.showTabs": "multiple",
  "zenMode.hideLineNumbers": false,

  // Telemetry
  "telemetry.telemetryLevel": "off",
  "redhat.telemetry.enabled": false,
  "sonarlint.disableTelemetry": true,
  "gitlens.telemetry.enabled": false,
  "mdb.sendTelemetry": false,

  // Extensions
  "extensions.autoCheckUpdates": true,
  "extensions.experimental.deferredStartupFinishedActivation": true,
  "extensions.closeExtensionDetailsOnViewChange": true,
  "extensions.ignoreRecommendations": true,
  "extensions.allowed": "*",

  // Problems
  "problems.defaultViewMode": "table",

  // Screencast Mode
  "screencastMode.fontSize": 56,
  "screencastMode.keyboardOptions": {
    "showKeys": true,
    "showCommands": true,
    "showCommandGroups": true,
    "showSingleEditorCursorMoves": true
  },

  // Remote
  "remote.tunnels.access.preventSleep": true,

  // Diff Editor
  "diffEditor.codeLens": true,
  "diffEditor.maxComputationTime": 0,
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.diffAlgorithm": "advanced",
  "diffEditor.useInlineViewWhenSpaceIsLimited": false,
  "diffEditor.renderSideBySide": true,
  "diffEditor.experimental.showMoves": true,
  "diffEditor.experimental.useTrueInlineView": true,
  "multiDiffEditor.experimental.enabled": true,

  // Merge Editor
  "mergeEditor.diffAlgorithm": "advanced",
  "mergeEditor.showDeletionMarkers": true,

  // Git & SCM
  "git.defaultBranchName": "main",
  "git.enableStatusBarSync": false,
  "git.mergeEditor": false,
  "git.untrackedChanges": "separate",
  "git.autofetch": true,
  "git.decorations.enabled": true,
  "git.allowNoVerifyCommit": false,
  "git.allowForcePush": false,
  "git.inputValidation": true,
  "git.inputValidationLength": 72,
  "git.inputValidationSubjectLength": 72,
  "git.useEditorAsCommitInput": true,
  "git.terminalGitEditor": true,
  "git.blame.statusBarItem.enabled": true,
  "git.blame.statusBarItem.template": "${authorName} (${authorDateAgo})",
  "scm.diffDecorationsIgnoreTrimWhitespace": "false",
  "scm.workingSets.enabled": true,
  "scm.workingSets.default": "current",
  "[git-commit]": {
    // git commit message subject max length is 72 characters on GitHub
    // but even better to keep a subject shorter (less than 50)
    "editor.rulers": [50, 72],
    "workbench.editor.restoreViewState": false
  },
  "[scminput]": {
    "editor.rulers": [50, 72],
  },

  // GitHub
  "github.gitProtocol": "ssh",

  // JavaScript
  "js/ts.implicitProjectConfig.checkJs": true,
  "js/ts.implicitProjectConfig.strictNullChecks": true,
  "js/ts.implicitProjectConfig.strictFunctionTypes": true,
  "js/ts.implicitProjectConfig.module": "ESNext",
  "js/ts.implicitProjectConfig.target": "ESNext",
  "javascript.validate.enable": true,
  "javascript.updateImportsOnFileMove.enabled": "prompt",
  "javascript.preferences.quoteStyle": "single",
  "javascript.preferences.importModuleSpecifier": "shortest",
  "javascript.preferences.importModuleSpecifierEnding": "js",
  "javascript.preferences.renameMatchingJsxTags": true,
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.updateImportsOnPaste.enabled": true,
  "javascript.referencesCodeLens.enabled": true,
  "[javascript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },

  // TypeScript
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.updateImportsOnFileMove.enabled": "prompt",
  "typescript.suggest.autoImports": true,
  "typescript.suggest.completeFunctionCalls": true,
  "typescript.preferences.quoteStyle": "single",
  "typescript.preferences.importModuleSpecifier": "shortest",
  "typescript.preferences.importModuleSpecifierEnding": "auto",
  "typescript.preferences.includePackageJsonAutoImports": "on",
  "typescript.preferences.renameMatchingJsxTags": true,
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.referencesCodeLens.enabled": true,
  "typescript.implementationsCodeLens.enabled": true,
  "typescript.updateImportsOnPaste.enabled": true,
  "typescript.workspaceSymbols.excludeLibrarySymbols": true,
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,
  "typescript.experimental.expandableHover": true,

  // HTML & Handlebars
  "html.format.unformatted": null,
  "html.format.indentInnerHtml": true,
  "html.format.templating": true,
  "html.format.indentHandlebars": true,
  "html.format.wrapLineLength": 120,
  "html.format.wrapAttributes": "auto",

  // Emmet
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": true,
  "emmet.showExpandedAbbreviation": "always",
  "emmet.useInlineCompletions": true,
  "emmet.preferences": {
    "bem.elementSeparator": "__",
    "bem.modifierSeparator": "--",
    "output.inlineBreak": 1,
    "css.autoInsertVendorPrefixes": true
  },
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact",
    "handlebars": "html"
  },

  // CSS
  "css.validate": true,
  "css.format.enable": true,
  "css.format.braceStyle": "collapse",
  "css.format.newlineBetweenSelectors": true,
  "css.format.newlineBetweenRules": true,
  "css.format.spaceAroundSelectorSeparator": true,
  "css.format.preserveNewLines": true,
  "css.lint.boxModel": "ignore",
  "css.lint.argumentsInColorFunction": "error",
  "css.lint.vendorPrefix": "warning",
  "css.lint.compatibleVendorPrefixes": "warning",
  "css.lint.duplicateProperties": "error",
  "css.lint.emptyRules": "error",
  "css.lint.float": "error",
  "css.lint.fontFaceProperties": "error",
  "css.lint.hexColorLength": "error",
  "css.lint.idSelector": "ignore",
  "css.lint.ieHack": "warning",
  "css.lint.important": "warning",
  "css.lint.importStatement": "warning",
  "css.lint.propertyIgnoredDueToDisplay": "warning",
  "css.lint.universalSelector": "warning",
  "css.lint.unknownAtRules": "warning",
  "css.lint.unknownProperties": "warning",
  "css.lint.unknownVendorSpecificProperties": "warning",
  "css.lint.zeroUnits": "warning",
  "[css]": {
    "editor.suggest.insertMode": "replace"
  },

  // SCSS
  "[scss]": {
    "editor.suggest.insertMode": "replace"
  },

  // Markdown
  "markdown.validate.enabled": true,
  "markdown.occurrencesHighlight.enabled": true,
  "markdown.validate.duplicateLinkDefinitions.enabled": "error",
  "markdown.validate.unusedLinkDefinitions.enabled": "warning",
  "markdown.editor.pasteUrlAsFormattedLink.enabled": "smart",

  // Prisma specific configurations
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },

  // JSON with comments specific configurations
  "[jsonc]": {
    "editor.formatOnSave": false,
    "editor.formatOnPaste": false
  },

  // Terraform
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSaveMode": "file"
  },

  // Terraform Variables
  "[terraform-vars]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSaveMode": "file"
  },

  /* Extensions
  ------------------------------------------------------------------------- */

  // CodeTour (Extension)
  "codetour.recordMode": "pattern",

  // vscode-icons (Extension)
  "vsicons.presets.hideExplorerArrows": true,

  // Code Spell Checker (Extension)
  "cSpell.language": "en-GB,uk",
  "cSpell.showStatus": false,
  "cSpell.enabledFileTypes": {
    "*": true,
    "json": true,
    "jsonc": true,
    "prisma": true,
    "properties": true,
    "shellscript": true,
    "git-commit": true,
    "git-rebase": true,
    "commit-msg": true
  },
  "cSpell.userWords": [
    "screencast",
    "sonarlint"
  ],

  // GitLens (Extension)
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.codeLens.enabled": false,
  "gitlens.terminal.overrideGitEditor": false,
  "gitlens.statusBar.enabled": false,
  "gitlens.statusBar.pullRequests.enabled": false,
  "gitlens.graph.statusBar.enabled": false,
  "gitlens.launchpad.indicator.enabled": false,

  // ESLint (Extension)
  "eslint.useFlatConfig": true,
  "eslint.format.enable": true,
  "eslint.lintTask.enable": true,
  "eslint.useESLintClass": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
  ],

  // Visual Studio IntelliCode (Extension)
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

  // Template String Converter (Extension)
  "template-string-converter.addBracketsToProps": true,
  "template-string-converter.autoRemoveTemplateString": true,
  "template-string-converter.convertOutermostQuotes": true,

  // Doxygen Documentation Generator (Extension)
  "doxdocgen.generic.useGitUserName": true,
  "doxdocgen.generic.useGitUserEmail": true,

  // NPM IntelliSense (Extension)
  "npm-intellisense.scanDevDependencies": true,

  // Path IntelliSense (Extension)
  "path-intellisense.showHiddenFiles": true,

  // Go (Extension)
  "go.installDependenciesWhenBuilding": true,

  // Markdown All in One (Extension)
  "markdown.extension.preview.autoShowPreviewToSide": false,
  "markdown.extension.toc.levels": "2..6",
  "markdown.extension.toc.slugifyMode": "github",
  "markdown.extension.toc.updateOnSave": true,
  "markdown.extension.toc.omittedFromToc": {
    "README.md": [
      "## Table of Contents"
    ]
  },

  // Figma (Extension)
  "figma.autocompleteProperties": true,
  "figma.autocompleteBlocks": true,

  // Turbo Console Log (extension)
  "turboConsoleLog.addSemicolonInTheEnd": true,
  "turboConsoleLog.delimiterInsideMessage": "~",
  "turboConsoleLog.includeFileNameAndLineNum": true,
  "turboConsoleLog.insertEmptyLineAfterLogMessage": false,
  "turboConsoleLog.insertEmptyLineBeforeLogMessage": false,
  "turboConsoleLog.insertEnclosingClass": true,
  "turboConsoleLog.insertEnclosingFunction": true,
  "turboConsoleLog.logFunction": "log",
  "turboConsoleLog.logMessagePrefix": "",
  "turboConsoleLog.logMessageSuffix": "",
  "turboConsoleLog.logType": "log",
  "turboConsoleLog.quote": "'",
  "turboConsoleLog.wrapLogMessage": false,

  // Live Server (extension)
  "liveServer.settings.CustomBrowser": "chrome:PrivateMode",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true
}
