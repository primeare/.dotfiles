#!/usr/bin/env bash

# exit immediately if a pipeline exits with a non-zero status
set -Eeuxo pipefail

RED="\033[1;31m"
GREEN="\033[1;32m"
RESET="\033[0m"

function pass () {
  echo -e "[${GREEN}OK${RESET}] $1"
}

function fail () {
  echo -e "[${RED}FAIL${RESET}] $1"
  exit 1
}

INSTALLED_FILES_PATHS=(
  "$HOME/.gitconfig"
  "$HOME/.gitmessage"
  "$HOME/.npmrc"
  "$HOME/.config/fish/config.fish"
  "$HOME/.config/starship.toml"
  "$HOME/Library/Application Support/Code/User/settings.json"
)

INSTALLED_DIRECTORIES_PATHS=(
  "$HOME/.config/fish/functions"
)

whereis fish
fish --version
whereis starship
starship --version
whereis node
node --version
whereis code
code --version
whereis docker
docker --version

VSCODE_INSTALLED_EXTENSIONS=()
while IFS='' read -r line; do VSCODE_INSTALLED_EXTENSIONS+=("$line"); done < <(code --list-extensions)
NUMBER_OF_VSCODE_EXTENSIONS_INSTALLED=${#VSCODE_INSTALLED_EXTENSIONS[@]}

for FILE in "${INSTALLED_FILES_PATHS[@]}"; do
  # if a symbolic link and a non-empty file
  if test -L "$FILE" && test -s "$FILE"; then
    pass "$FILE is a symbolic link file"
  else
    fail "$FILE is not a symbolic link file"
  fi
done

for DIRECTORY in "${INSTALLED_DIRECTORIES_PATHS[@]}"; do
  # if a symbolic link and a directory
  if test -L "$DIRECTORY" && test -d "$DIRECTORY"; then
    pass "$DIRECTORY is a symbolic link directory"
  else
    fail "$DIRECTORY is not a symbolic link directory"
  fi
done

if [ "$NUMBER_OF_VSCODE_EXTENSIONS_INSTALLED" -gt 0 ]; then
  pass "$NUMBER_OF_VSCODE_EXTENSIONS_INSTALLED Visual Studio Code extensions installed successfully"
else
  fail "Visual Studio Code extensions installation failed"
fi
